#include <SPISlave_T4.h>

// Define the SPI slave object for the default SPI port with 8-bit data
SPISlave_T4<&SPI, SPI_8_BITS> mySPI;

// Callback function to handle received data
void myReceiveFunction() {
    // Process all available received bytes
    while (mySPI.available()) {
        // Read the received command (8-bit)
        uint8_t command = (uint8_t)mySPI.popr();
        uint8_t response;

        // Determine the response based on the command
        if (command == 0x01) {
            response = 25; // Example: temperature value
        } else if (command == 0x02) {
            response = 60; // Example: humidity value
        } else {
            response = 0xFF; // Unknown command response
        }

        // Load the response into the transmit buffer for the next transaction
        mySPI.pushr(response);
    }
}

void setup() {
    // Initialize the SPI slave
    mySPI.begin();

    // Set the callback function to handle received data
    mySPI.onReceive(myReceiveFunction);

    // Load an initial default value into the transmit buffer
    mySPI.pushr(0x00);
}

void loop() {
    // No action needed in the loop; everything is handled in the callback
}